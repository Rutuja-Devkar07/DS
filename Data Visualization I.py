# -*- coding: utf-8 -*-
"""DSBDA_PR8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AKJQiurGkXFDpeCiIbWyA7PLwKK_mFMt
"""

# 8) Data Visualization I
# 1. Use the inbuilt dataset 'titanic'. The dataset contains 891 rows and contains information
# about the passengers who boarded the unfortunate Titanic ship. Use the Seaborn library to
# see if we can find any patterns in the data.
# 2. Write a code to check how the price of the ticket (column name: 'fare') for each
# passenger is distributed by plotting a histogram.

import  pandas  as  pd

import  numpy  as  np

import  matplotlib.pyplot  as  plt
import  seaborn  as  sns

dataset = sns.load_dataset( 'titanic' )

dataset.head()

sns.distplot(x = dataset['age'], bins = 10)

sns.distplot(dataset['age'], bins = 10, kde = False)

#JOINT PLOT
#FOR PLOT 1
sns.jointplot(x = dataset['age'], y= dataset['fare'], kind= 'scatter')

#FOR PLOT 2
sns.jointplot(x = dataset['age'], y = dataset['fare'], kind = 'hex')

#THE RUG PLOT

sns.rugplot(dataset['fare'])

#2 Categorical plot
#the bar plot

sns.barplot(x='sex', y = 'age', data= dataset)

#calculate standard deviation for the ages of male and female passengers

sns.barplot(x='sex', y='age', data= dataset, estimator = np.std)

#The count plot

sns.countplot(x='sex', data = dataset)

#The Box Plot

sns.boxplot(x= 'sex', y= 'age', data= dataset)

#you can make your boxplots more fancy by adding another layer of distribution.

sns.boxplot(x='sex', y='age', data= dataset, hue= "survived")

#The Voilin Plot
sns.violinplot(x='sex',y='age', data= dataset)

#like box plots, you can also add another categorical variable to the violin plot using the hue parameter.

sns.violinplot(x='sex', y='age', data= dataset, hue = 'survived')

#ADVANCED PLOTS:

#The Strip plot

sns.stripplot(x='sex', y='age', data= dataset, jitter = False)

sns.stripplot(x='sex', y='age', data= dataset, jitter = True)

#The swarm plot
sns.swarmplot(x='sex', y='age', data= dataset)

#lets add another categorical column to the swarm plot
sns.swarmplot(x='sex', y='age', data= dataset, hue = 'survived')

#Matrix plot
# Heat maps
dataset_numeric = dataset.select_dtypes(include=[np.number])  # Select only numeric columns
corr = dataset_numeric.corr()  # Compute correlation on numeric columns
sns.heatmap(corr)

#Cluster Map
#Checking how the price of the ticket(column name: fare) for each passenger is distributed by plotting a histrogram

sns.histplot(dataset['fare'], kde = False, bins = 10)

